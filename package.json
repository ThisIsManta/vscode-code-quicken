{
    "name": "code-quicken",
    "displayName": "Manta's Code Quicken",
    "description": "Insert import/require statements quickly.",
    "version": "2.5.0",
    "publisher": "thisismanta",
    "categories": [
        "Snippets"
    ],
    "keywords": [
        "import",
        "require",
        "javascript",
        "file",
        "module"
    ],
    "repository": {
        "url": "https://github.com/ThisIsManta/vscode-code-quicken"
    },
    "bugs": {
        "url": "https://github.com/ThisIsManta/vscode-code-quicken/issues"
    },
    "icon": "docs/logo.png",
    "galleryBanner": {
        "color": "#212121",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.26.0"
    },
    "activationEvents": [
        "onCommand:codeQuicken.addImport",
        "onCommand:codeQuicken.fixImport",
        "onCommand:codeQuicken.convertImport"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "codeQuicken.addImport",
                "title": "Insert Import/Require",
                "category": "Code Quicken"
            },
            {
                "command": "codeQuicken.fixImport",
                "title": "Fix Import/Require",
                "category": "Code Quicken"
            },
            {
                "command": "codeQuicken.convertImport",
                "title": "Convert Require To Import",
                "category": "Code Quicken"
            }
        ],
        "configuration": {
            "title": "Code Quicken",
            "properties": {
                "codeQuicken.history": {
                    "description": "Set the maximum number of the recently used items when no search words.",
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 20,
                    "default": 20
                },
                "codeQuicken.javascript.syntax": {
                    "description": "Insert either ES2015's import or AMD's require syntax. Setting this to \"auto\" will resolve using the current viewing file or nearby files automatically.",
                    "type": "string",
                    "enum": [
                        "import",
                        "require",
                        "auto"
                    ],
                    "default": "auto"
                },
                "codeQuicken.javascript.grouping": {
                    "description": "Allow grouping multiple-imports. For example, adding `bar` to `import { foo } from 'zoo';` so it becomes `import { foo, bar } from 'zoo';`",
                    "type": "boolean",
                    "default": false
                },
                "codeQuicken.javascript.fileExtension": {
                    "description": "Insert JS/JSX/TS/TSX file extension to the path.",
                    "type": "boolean",
                    "default": false
                },
                "codeQuicken.javascript.indexFile": {
                    "description": "Insert \"index\" file name and also its extension to the path.",
                    "type": "boolean",
                    "default": false
                },
                "codeQuicken.javascript.quoteCharacter": {
                    "description": "Insert either single quotes or double quotes as a string enclosure. Setting this to \"auto\" will resolve using the current viewing file or nearby files automatically.",
                    "type": "string",
                    "enum": [
                        "single",
                        "double",
                        "auto"
                    ],
                    "default": "auto"
                },
                "codeQuicken.javascript.semiColons": {
                    "description": "Insert statement-ending semi-colons. Setting this to \"auto\" will resolve using the current viewing file or nearby files automatically.",
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "auto"
                    ],
                    "default": "auto"
                },
                "codeQuicken.javascript.predefinedVariableNames": {
                    "description": "Replace the given file-name keys with its respective variable-name values. The file-name keys must be written in regular expression. For example, setting this to `{ \"foo-(\\\\d)+\": \"bar_$1\" }` writes `const bar_123 = require(\"./foo-123.js\");`",
                    "type": "object",
                    "patternProperties": {
                        ".": {
                            "type": "string"
                        }
                    },
                    "default": {}
                },
                "codeQuicken.javascript.variableNamingConvention": {
                    "description": "Define the variable naming convention. This has no effects on \"codeQuicken.javascript.predefinedVariableNames\"",
                    "type": "string",
                    "enum": [
                        "camelCase",
                        "PascalCase",
                        "snake_case",
                        "lowercase",
                        "none"
                    ],
                    "default": "none"
                },
                "codeQuicken.javascript.filteredFileList": {
                    "description": "Filter the files shown in the list when adding an import/require statement. Both keys and values must be written in regular expression. For example, you are working on a file named \"foo.js\", and you want to see only the files ended with \".spec.js\" in the list when adding an import statement, then you must set this to `{ \"/foo\\\\.js$\": \"\\\\.spec\\\\.js$\" }`",
                    "type": "object",
                    "patternProperties": {
                        ".": {
                            "type": "string"
                        }
                    },
                    "default": {}
                },
                "codeQuicken.typescript.grouping": {
                    "description": "Allow grouping multiple-imports. For example, adding `bar` to `import { foo } from 'zoo';` so it becomes `import { foo, bar } from 'zoo';`",
                    "type": "boolean",
                    "default": true
                },
                "codeQuicken.typescript.fileExtension": {
                    "description": "Insert JS/JSX/TS/TSX file extension to the path.",
                    "type": "boolean",
                    "default": false
                },
                "codeQuicken.typescript.indexFile": {
                    "description": "Insert \"index\" file name and also its extension to the path.",
                    "type": "boolean",
                    "default": false
                },
                "codeQuicken.typescript.quoteCharacter": {
                    "description": "Insert either single quotes or double quotes as a string enclosure. Setting this to \"auto\" will resolve using the current viewing file or nearby files automatically.",
                    "type": "string",
                    "enum": [
                        "single",
                        "double",
                        "auto"
                    ],
                    "default": "auto"
                },
                "codeQuicken.typescript.semiColons": {
                    "description": "Insert statement-ending semi-colons. Setting this to \"auto\" will resolve using the current viewing file or nearby files automatically.",
                    "type": "string",
                    "enum": [
                        "always",
                        "never",
                        "auto"
                    ],
                    "default": "auto"
                },
                "codeQuicken.typescript.predefinedVariableNames": {
                    "description": "Replace the given file-name keys with its respective variable-name values. The file-name keys must be written in regular expression. For example, setting this to `{ \"foo-(\\\\d)+\": \"bar_$1\" }` writes `import bar_123 from \"./foo-123.ts\";`",
                    "type": "object",
                    "patternProperties": {
                        ".": {
                            "type": "string"
                        }
                    },
                    "default": {}
                },
                "codeQuicken.typescript.variableNamingConvention": {
                    "description": "Define the variable naming convention. This has no effects on \"codeQuicken.typescript.predefinedVariableNames\"",
                    "type": "string",
                    "enum": [
                        "camelCase",
                        "PascalCase",
                        "snake_case",
                        "lowercase",
                        "none"
                    ],
                    "default": "none"
                },
                "codeQuicken.typescript.filteredFileList": {
                    "description": "Filter the files shown in the list when adding an import/require statement. Both keys and values must be written in regular expression. For example, you are working on a file named \"foo.ts\", and you want to see only the files ended with \".spec.ts\" in the list when adding an import statement, then you must set this to `{ \"/foo\\\\.ts$\": \"\\\\.spec\\\\.ts$\" }`",
                    "type": "object",
                    "patternProperties": {
                        ".": {
                            "type": "string"
                        }
                    },
                    "default": {}
                },
                "codeQuicken.stylus.syntax": {
                    "description": "Insert either @import or @require. See also http://stylus-lang.com/docs/import.html",
                    "type": "string",
                    "enum": [
                        "@import",
                        "@require"
                    ],
                    "default": "@import"
                },
                "codeQuicken.stylus.fileExtension": {
                    "description": "Insert STYL file extension to the path.",
                    "type": "boolean",
                    "default": true
                },
                "codeQuicken.stylus.indexFile": {
                    "description": "Insert \"index\" file name and also its extension to the path.",
                    "type": "boolean",
                    "default": true
                },
                "codeQuicken.stylus.quoteCharacter": {
                    "description": "Insert either single quotes or double quotes as a string enclosure.",
                    "type": "string",
                    "enum": [
                        "single",
                        "double"
                    ],
                    "default": "double"
                },
                "codeQuicken.stylus.semiColons": {
                    "description": "Insert statement-ending semi-colons.",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "keybindings": [
            {
                "command": "codeQuicken.addImport",
                "key": "ctrl+shift+i"
            }
        ]
    },
    "scripts": {
        "postinstall": "node ./node_modules/vscode/bin/install",
        "compile": "tsc --watch --project ./",
        "vscode:prepublish": "tsc --skipLibCheck --project ./",
        "preversion": "git push --dry-run origin master:master",
        "version": "vsce publish",
        "postversion": "git push --tags --quiet origin master:master"
    },
    "devDependencies": {
        "@types/glob": "^5.0.35",
        "@types/lodash": "^4.14.116",
        "@types/node": "^8.0.24",
        "vscode": "^1.1.21"
    },
    "dependencies": {
        "glob": "^7.1.2",
        "lodash": "^4.17.10",
        "stylus": "^0.54.5",
        "typescript": "^3.0.1"
    }
}
